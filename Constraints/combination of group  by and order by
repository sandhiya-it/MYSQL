having is used to add the condition after group by and order by 

insert into branch values('Tambaram','Chennai-45',50000);
insert into branch values('Adayar','Chennai-20',100000);
insert into branch values('Tnagar','Chennai-17',250000);
insert into branch values('Saidapet','Chennai-15',150000);
insert into branch values('Chrompet','Chennai-43',450000);
insert into branch values('Guindy','Chennai-32',150000);

insert into loan values('Loan_01','Guindy',900);
insert into loan values('Loan_02','Adayar',1500);
insert into loan values('Loan_03','Tambaram',1500);
insert into loan values('Loan_04','Tambaram',1300);
insert into loan values('Loan_05','Adayar',1000);
insert into loan values('Loan_06','Saidapet',2000);
insert into loan values('Loan_07','Chrompet',500);
insert into loan values('Loan_08','Adayar',2000);
insert into loan values('Loan_09','Guindy',null);

      
select branch_name,sum(amount) as total from loan group by branch_name order by total asc;

select branch_name,sum(amount) as total from loan group by branch_name having total>1800 order by total desc;

Output:

+-------------+-------+
| branch_name | total |
+-------------+-------+
| Chrompet    |   500 |
| Guindy      |   900 |
| Saidapet    |  2000 |
| Tambaram    |  2800 |
| Adayar      |  4500 |
+-------------+-------+
+-------------+-------+
| branch_name | total |
+-------------+-------+
| Adayar      |  4500 |
| Tambaram    |  2800 |
| Saidapet    |  2000 |
+-------------+-------+
